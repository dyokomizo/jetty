<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jetty-plus</groupId>
	<artifactId>weld-plus-jsf2</artifactId>
	<packaging>war</packaging>
	<version>0.1-SNAPSHOT</version>
	<name>weld+jsf2</name>
	<repositories>
		<!--
			As of October 2009, a few of the weld dependencies were not yet on
			the main maven repo. We can add JBoss repo as it is updated more
			frequently.
		-->
		<repository>
			<id>repository.jboss.org</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<!-- Common -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
			<version>1.0-CR1</version>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.0-RC</version>
		</dependency>

		<!-- Jetty-specific scopes and artifacts -->
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<scope>runtime</scope>
			<version>2.0.0-RC</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet</artifactId>
			<version>1.0.0-CR1</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.1.2-b04</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.el</groupId>
					<artifactId>el-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Embedded Jetty artifacts -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.26</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-jetty</artifactId>
			<version>6.1.26</version>
			<scope>provided</scope>
		</dependency>
		<!-- Required to compile JSPs -->
		<dependency>
			<groupId>com.sun.tools</groupId>
			<artifactId>tools</artifactId>
			<version>1.6.0_22</version>
			<scope>system</scope>
			<systemPath>${java.home}/../lib/tools.jar</systemPath>
		</dependency>
	</dependencies>
	<build>
		<finalName>weld+jsf2</finalName>
		<!--
			changing outputDirectory so eclipse compile classes here and CDI
			pick's up changes and hotdeploy function of jetty:run works properly
			without using war:inplace and restarting every time
		-->
		<outputDirectory>${basedir}/src/main/webapp/WEB-INF/classes</outputDirectory>
		<plugins>
			<!-- Compiler plugin enforces Java 1.6 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Eclipse plugin enforces download of source and JavaDoc jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<!-- Embedded Jetty (jetty:run) -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<!-- force friendly name instead of artifact name + version -->
					<contextPath>${build.finalName}</contextPath>
					<!--
						Where the BeanManager is constructed. This is where we'll later
						declare datasource.
					-->
					<jettyEnvXml>${basedir}/src/main/resources/jetty-env.xml</jettyEnvXml>
					<!--
						Updated to not use useFileMappedBuffer, due to file locking on
						windows
					-->
					<defaultsDescriptor>${basedir}/src/main/resources/webdefault.xml</defaultsDescriptor>
					<!--
						This parameter will auto-deploy modified classes...my personal
						favorite Jetty feature.
					-->
					<scanIntervalSeconds>1</scanIntervalSeconds>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
					<filesets>
						<fileset>
							<!-- clean up files from war:inplace -->
							<directory>src/main/webapp</directory>
							<includes>
								<include>WEB-INF/classes/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>executable-war</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<archive>
								<manifest>
									<mainClass>com.jetty_plus.Main</mainClass>
								</manifest>
							</archive>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<encoding>UTF-8</encoding>
						</configuration>
						<executions>
							<execution>
								<id>copy-main-class-to-war-root</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<resources>
										<resource>
											<directory>${project.build.outputDirectory}</directory>
											<includes>
												<include>com/jetty_plus/Main.class</include>
												<include>com/jetty_plus/Main$*.class</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<encoding>UTF-8</encoding>
						</configuration>
						<executions>
							<execution>
								<id>unpack-jetty-to-war-root</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<includeGroupIds>org.mortbay.jetty,javax.servlet,ant,com.sun.tools</includeGroupIds>
									<excludes>**/*.html,**/*.css</excludes>
									<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>